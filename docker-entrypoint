#!/usr/bin/env sh

# =============================================================================
# Crondog Respawn - Docker Container Restart Scheduler
# =============================================================================
# Copyright (c) 2025 Fritz Wijaya
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# =============================================================================

set -e
# shellcheck disable=2039
set -o pipefail

# =============================================================================
# Watchdog Cron Restart - Modular Version
# =============================================================================
# This script monitors Docker containers and manages cron-based restarts
# 
# The code has been refactored into modules for better maintainability:
# - lib/constants.sh: Configuration and constants
# - lib/logging.sh: Logging functions
# - lib/utils.sh: Utility functions
# - lib/docker.sh: Docker management
# - lib/cron.sh: Cron management
# - lib/process.sh: Process management
# - lib/init.sh: Initialization functions
# =============================================================================

# Get the script directory for loading modules
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Load all modules
for module in constants logging utils docker cron process init; do
    module_path="$SCRIPT_DIR/lib/$module.sh"
    if [ -f "$module_path" ]; then
        # shellcheck source=/dev/null
        . "$module_path"
    else
        echo "ERROR: Required module not found: $module_path" >&2
        exit 1
    fi
done

# =============================================================================
# Main Execution
# =============================================================================

main() {
    # Initialize configuration
    init_config
    
    # Initialize the watchdog system
    if ! initialize_watchdog; then
        exit 1
    fi
    
    # Setup initial crontab
    if ! setup_initial_crontab; then
        exit 1
    fi
    
    # Setup signal handlers for graceful shutdown
    setup_signal_handlers
    
    # Start background services
    if ! start_background_services; then
        exit 1
    fi
    
    # Enter main process monitoring loop
    main_process_loop
}

# Run main function with all arguments
main "$@"
